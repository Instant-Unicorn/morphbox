#!/bin/bash
set -euo pipefail

# MorphBox v2.0 CLI
# Launches local server and web interface

MORPHBOX_VERSION="2.0.0"
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SERVER_DIR="$SCRIPT_DIR/server"
WEB_DIR="$SCRIPT_DIR/web"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

info() { echo -e "${GREEN}[INFO]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; exit 1; }

# Show help
show_help() {
    cat << EOF
MorphBox v${MORPHBOX_VERSION} - AI Development Environment

Usage: morphbox [OPTIONS]

Options:
    --help      Show this help message
    --version   Show version information
    --stop      Stop all MorphBox services
    --status    Show service status
    --server    Start only the backend server
    --web       Start only the web interface

Default: Starts both server and web interface

Server runs on: http://localhost:8008
WebSocket on:   ws://localhost:8009
Web UI on:      http://localhost:8010

EOF
}

# Show version
show_version() {
    echo "MorphBox v${MORPHBOX_VERSION}"
}

# Check if service is running
is_running() {
    local service=$1
    case "$service" in
        server)
            pgrep -f "node.*index.js" > /dev/null 2>&1
            ;;
        web)
            pgrep -f "vite dev" > /dev/null 2>&1
            ;;
    esac
}

# Start server
start_server() {
    if is_running server; then
        info "Server already running"
    else
        info "Starting MorphBox server..."
        cd "$SERVER_DIR"
        node index.js > "$SCRIPT_DIR/server.log" 2>&1 &
        echo $! > "$SCRIPT_DIR/server.pid"
        sleep 3
        # Check if server started by looking for success message in log
        if grep -q "MorphBox server running" "$SCRIPT_DIR/server.log" 2>/dev/null; then
            info "Server started successfully"
        else
            error "Failed to start server. Check server.log for details"
        fi
    fi
}

# Start web interface
start_web() {
    if is_running web; then
        info "Web interface already running"
    else
        info "Starting MorphBox web interface..."
        cd "$WEB_DIR"
        npm run dev > "$SCRIPT_DIR/web.log" 2>&1 &
        echo $! > "$SCRIPT_DIR/web.pid"
        sleep 3
        if is_running web; then
            info "Web interface started successfully"
            info "Opening browser..."
            # Try to open browser
            if command -v xdg-open > /dev/null; then
                xdg-open "http://localhost:8010" 2>/dev/null || true
            elif command -v open > /dev/null; then
                open "http://localhost:8010" 2>/dev/null || true
            fi
        else
            error "Failed to start web interface. Check web.log for details"
        fi
    fi
}

# Stop services
stop_services() {
    info "Stopping MorphBox services..."
    
    # Stop server
    if [[ -f "$SCRIPT_DIR/server.pid" ]]; then
        local pid=$(cat "$SCRIPT_DIR/server.pid")
        if kill -0 "$pid" 2>/dev/null; then
            kill "$pid"
            rm -f "$SCRIPT_DIR/server.pid"
            info "Server stopped"
        fi
    fi
    
    # Stop web
    if [[ -f "$SCRIPT_DIR/web.pid" ]]; then
        local pid=$(cat "$SCRIPT_DIR/web.pid")
        if kill -0 "$pid" 2>/dev/null; then
            kill "$pid"
            rm -f "$SCRIPT_DIR/web.pid"
            info "Web interface stopped"
        fi
    fi
    
    # Kill any orphaned processes
    pkill -f "node.*morphbox.*server/index.js" 2>/dev/null || true
    pkill -f "vite.*morphbox.*web" 2>/dev/null || true
}

# Show status
show_status() {
    echo "MorphBox Status:"
    echo "================"
    
    if is_running server; then
        echo -e "Server:        ${GREEN}Running${NC} (http://localhost:8008)"
        echo -e "WebSocket:     ${GREEN}Running${NC} (ws://localhost:8009)"
    else
        echo -e "Server:        ${RED}Stopped${NC}"
    fi
    
    if is_running web; then
        echo -e "Web Interface: ${GREEN}Running${NC} (http://localhost:8010)"
    else
        echo -e "Web Interface: ${RED}Stopped${NC}"
    fi
    
    echo ""
    echo "Logs:"
    [[ -f "$SCRIPT_DIR/server.log" ]] && echo "  Server: $SCRIPT_DIR/server.log"
    [[ -f "$SCRIPT_DIR/web.log" ]] && echo "  Web:    $SCRIPT_DIR/web.log"
}

# Check dependencies
check_dependencies() {
    if ! command -v node > /dev/null; then
        error "Node.js is not installed. Please install Node.js 18 or later"
    fi
    
    if ! command -v npm > /dev/null; then
        error "npm is not installed. Please install npm"
    fi
    
    # Check if dependencies are installed
    if [[ ! -d "$SERVER_DIR/node_modules" ]]; then
        warn "Server dependencies not installed. Installing..."
        cd "$SERVER_DIR" && npm install
    fi
    
    if [[ ! -d "$WEB_DIR/node_modules" ]]; then
        warn "Web dependencies not installed. Installing..."
        cd "$WEB_DIR" && npm install
    fi
}

# Main
main() {
    # Parse arguments
    case "${1:-}" in
        --help)
            show_help
            exit 0
            ;;
        --version)
            show_version
            exit 0
            ;;
        --stop)
            stop_services
            exit 0
            ;;
        --status)
            show_status
            exit 0
            ;;
        --server)
            check_dependencies
            start_server
            exit 0
            ;;
        --web)
            check_dependencies
            start_web
            exit 0
            ;;
        "")
            # Default: start both services
            check_dependencies
            start_server
            start_web
            info "MorphBox is running!"
            info "Web interface: http://localhost:8010"
            info "Use 'morphbox --stop' to stop all services"
            ;;
        *)
            error "Unknown option: $1. Use --help for usage information."
            ;;
    esac
}

main "$@"